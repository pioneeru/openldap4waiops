#!/bin/bash

if [ "$LICENSE" != "accept" ]; then
    echo "Set environment variable LICENSE=accept to indicate acceptance of license terms and conditions."
    echo "License agreements and information can be viewed on Passport Advantage."
    exit 1
fi

start_server()
{
    echo "Starting LDAP server ..................."
    /usr/sbin/slapd -F /usr/local/var/openldap-data/slapd.d -h "ldap://${SLAPD_PORT_STRING}/ ldapi://%2Fvar%2Frun%2Fopenldap%2Fldapi/"
}

wait_for_server()
{
    while [ ! -f /usr/local/var/run/slapd.pid ]
    do
        echo "waiting for ldap server..."
        sleep 1s
    done
}

stop_server()
{
    echo "Stopping LDAP server ..................."
    kill -INT `cat /usr/local/var/run/slapd.pid`
}

FIRST_TIME=FALSE

initialise_db()
{
    if [ ! -f $LDAP_DIR/slapd.conf ]; then
        if [ -s $LDAP_DIR/slapd.conf-replace ]; then
            cp $LDAP_DIR/slapd.conf-replace $LDAP_DIR/slapd.conf
        else
            cp $LDAP_DIR/slapd.conf.default $LDAP_DIR/slapd.conf
        fi
    fi

    sed -i "s|LDAP_URL|$LDAP_URL|g" $LDAP_DIR/slapd.conf
    sed -i "s|LDAP_SUFFIX|$LDAP_SUFFIX|g" $LDAP_DIR/slapd.conf

    rm -rf /usr/local/var/openldap-data/slapd.d/*
    echo "Starting Initialisation!-------"

    echo "Initialising DB ..."
        sed -i "s/LDAP_BIND_PWD/$LDAP_BIND_PWD/g" $LDAP_DIR/slapd.conf
        echo "" | slapadd -n 0 -F /usr/local/var/openldap-data/slapd.d -f $LDAP_DIR/slapd.conf
    echo "$LDAP_BIND_PWD" | base64 > /usr/local/var/openldap-data/LDAP_BIND_PWD

    FIRST_TIME=TRUE
}



add_default_users()
{
    if [ "$FIRST_TIME" = "TRUE" ]; then
        echo "Adding default users..."
        sed -i "s|DEFAULT_LDAP_SUFFIX|$LDAP_SUFFIX|g" $LDAP_DIR/sso.ldif
       ldapadd -c -x -w "$LDAP_BIND_PWD" -D "$LDAP_BIND_DN" -H ldapi://%2Fvar%2Frun%2Fopenldap%2Fldapi/ -f $LDAP_DIR/sso.ldif
        echo "Default SSO users creation finished with rc:$?" 
    fi
}


set_ldap_user_pwd()
{
    DN=$1
    NEWPWD=$2
    echo "Setting password for $1"
   ldappasswd -H ldapi://%2Fvar%2Frun%2Fopenldap%2Fldapi/ -D "$LDAP_BIND_DN" -w "$LDAP_BIND_PWD" -s "$NEWPWD" "$DN"
}

set_user_pwd()
{
    set_ldap_user_pwd $ICP_ADMIN_DN $ICP_ADMIN_PWD
    set_ldap_user_pwd $ICP_USER_DN $ICP_USER_PWD
    set_ldap_user_pwd $IMPACT_USER_DN $IMPACT_ADMIN_PWD 
}

export LDAP_DIR=/home/openldap
export SLAPD_PORT_STRING=""
if [ ! -z "$SLAPD_SERVER_PORT" ]; then export SLAPD_PORT_STRING=":$SLAPD_SERVER_PORT"; fi

if [ -z "$LDAP_BIND_DN" ]; then export LDAP_BIND_DN="cn=admin,dc=mycluster,dc=icp"; fi
if [ -z "$LDAP_SUFFIX" ]; then export LDAP_SUFFIX="dc=mycluster,dc=icp"; fi
if [ -z "$LDAP_BIND_PWD" ]; then export LDAP_BIND_PWD="admin"; fi
if [ -z "$ICP_ADMIN_PWD" ]; then export ICP_ADMIN_PWD="netcool"; fi
if [ -z "$ICP_USER_PWD" ]; then export ICP_USER_PWD="netcool"; fi
if [ -z "$IMPACT_ADMIN_PWD" ]; then export IMPACT_ADMIN_PWD="netcool"; fi
ICP_ADMIN_DN="uid=icpadmin,ou=users,${LDAP_SUFFIX}"
ICP_USER_DN="uid=icpuser,ou=users,${LDAP_SUFFIX}"
IMPACT_USER_DN="uid=impactadmin,ou=users,${LDAP_SUFFIX}"

initialise_db

trap "stop_server" TERM INT EXIT
start_server || exit $?

wait_for_server
add_default_users
set_user_pwd

 PID=$(ps -C slapd -o pid= | tr -d " ")

 while [ -e "/proc/$PID" ]; do
    sleep 1
 done
